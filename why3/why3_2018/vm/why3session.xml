<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="0" name="Alt-Ergo" version="1.30" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Eprover" version="1.8-001" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.0.0" timelimit="10" steplimit="0" memlimit="2000"/>
<prover id="3" name="Z3" version="4.7.1" alternative="counterexamples" timelimit="10" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC4" version="1.6" alternative="counterexamples" timelimit="10" steplimit="0" memlimit="1000"/>
<prover id="6" name="Alt-Ergo" version="2.2.0" timelimit="10" steplimit="0" memlimit="1000"/>
<file name="../vm.mlw" proved="true">
<theory name="ReflTransClosure" proved="true">
 <goal name="transition_star_one" proved="true">
 <proof prover="1"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="transition_star_transitive" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="transition_star_transitive.0" proved="true">
  <transf name="simplify_trivial_quantification_in_goal" proved="true" >
   <goal name="transition_star_transitive.0.0" proved="true">
   <proof prover="0"><result status="valid" time="0.00" steps="1"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="transition_star_transitive.1" proved="true">
  <transf name="simplify_trivial_quantification_in_goal" proved="true" >
   <goal name="transition_star_transitive.1.0" proved="true">
   <proof prover="0"><result status="valid" time="0.00" steps="7"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Vm" proved="true">
 <goal name="codeseq_at_app_right" proved="true">
 <proof prover="2" timelimit="1" memlimit="1000"><result status="valid" time="0.01" steps="114"/></proof>
 </goal>
 <goal name="codeseq_at_app_left" proved="true">
 <proof prover="2" timelimit="1" memlimit="1000"><result status="valid" time="0.03" steps="144"/></proof>
 </goal>
 <goal name="list_app_eq_nil" proved="true">
 <proof prover="2"><result status="valid" time="0.04" steps="121"/></proof>
 </goal>
 <goal name="list_app_eq_left_cons" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="list_app_eq_left_cons.0" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="list_app_eq_left_cons.0.0" proved="true">
   <proof prover="2" memlimit="1000"><result status="valid" time="0.07" steps="116"/></proof>
   </goal>
   <goal name="list_app_eq_left_cons.0.1" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="list_app_eq_left_cons.0.1.0" proved="true">
    <transf name="subst_all" proved="true" >
     <goal name="list_app_eq_left_cons.0.1.0.0" proved="true">
     <proof prover="4"><result status="valid" time="0.12"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="list_app_eq_last" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="list_app_eq_last.0" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="list_app_eq_last.0.0" proved="true">
   <proof prover="6"><result status="valid" time="0.08" steps="407"/></proof>
   </goal>
   <goal name="list_app_eq_last.0.1" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="list_app_eq_last.0.1.0" proved="true">
    <transf name="subst_all" proved="true" >
     <goal name="list_app_eq_last.0.1.0.0" proved="true">
     <proof prover="2"><result status="valid" time="0.05" steps="145"/></proof>
     <transf name="cut" proved="true" arg1="(c2 = Cons x1 x)">
      <goal name="list_app_eq_last.0.1.0.0.0" proved="true">
      <proof prover="6"><result status="valid" time="0.08" steps="413"/></proof>
      </goal>
      <goal name="list_app_eq_last.0.1.0.0.1" proved="true">
      <proof prover="3"><result status="valid" time="0.02"/></proof>
      <proof prover="4"><result status="valid" time="0.05"/></proof>
      <proof prover="6"><result status="valid" time="0.03" steps="154"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="list_app_eq_left" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="list_app_eq_left.0" proved="true">
  <transf name="split_goal_right" proved="true" >
   <goal name="list_app_eq_left.0.0" proved="true">
   <proof prover="2" memlimit="1000"><result status="valid" time="0.06" steps="98"/></proof>
   </goal>
   <goal name="list_app_eq_left.0.1" proved="true">
   <transf name="introduce_premises" proved="true" >
    <goal name="list_app_eq_left.0.1.0" proved="true">
    <transf name="subst_all" proved="true" >
     <goal name="list_app_eq_left.0.1.0.0" proved="true">
     <proof prover="4" memlimit="2000"><result status="valid" time="0.32"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="codeseq_at_right" proved="true">
 <proof prover="2"><result status="valid" time="0.05" steps="123"/></proof>
 </goal>
 <goal name="VC push" expl="VC for push" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="75"/></proof>
 </goal>
 <goal name="VC iimm" expl="VC for iimm" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="75"/></proof>
 </goal>
 <goal name="VC iload" expl="VC for iload" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="75"/></proof>
 </goal>
 <goal name="VC istore" expl="VC for istore" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="75"/></proof>
 </goal>
 <goal name="VC iaddr" expl="VC for iaddr" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="75"/></proof>
 </goal>
 <goal name="VC isubr" expl="VC for isubr" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="75"/></proof>
 </goal>
 <goal name="VC ibeqr" expl="VC for ibeqr" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="75"/></proof>
 </goal>
 <goal name="VC ibner" expl="VC for ibner" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="75"/></proof>
 </goal>
 <goal name="VC ibler" expl="VC for ibler" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="75"/></proof>
 </goal>
 <goal name="VC ibgtr" expl="VC for ibgtr" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="75"/></proof>
 </goal>
 <goal name="VC iconst" expl="VC for iconst" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="75"/></proof>
 </goal>
 <goal name="VC ivar" expl="VC for ivar" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="75"/></proof>
 </goal>
 <goal name="VC isetvar" expl="VC for isetvar" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="75"/></proof>
 </goal>
 <goal name="VC iadd" expl="VC for iadd" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="75"/></proof>
 </goal>
 <goal name="VC iaddu" expl="VC for iaddu" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="75"/></proof>
 </goal>
 <goal name="VC isub" expl="VC for isub" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="75"/></proof>
 </goal>
 <goal name="VC imul" expl="VC for imul" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="75"/></proof>
 </goal>
 <goal name="VC ibeq" expl="VC for ibeq" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="75"/></proof>
 </goal>
 <goal name="VC ible" expl="VC for ible" proved="true">
 <proof prover="2"><result status="valid" time="0.00" steps="75"/></proof>
 </goal>
 <goal name="VC ibne" expl="VC for ibne" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="75"/></proof>
 </goal>
 <goal name="VC ibgt" expl="VC for ibgt" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="75"/></proof>
 </goal>
 <goal name="VC ibranch" expl="VC for ibranch" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="75"/></proof>
 </goal>
 <goal name="VC ihalt" expl="VC for ihalt" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="75"/></proof>
 </goal>
 <goal name="g" proved="true">
 <proof prover="2"><result status="valid" time="0.64" steps="2212"/></proof>
 <transf name="inversion_pr" proved="true" >
  <goal name="g.0" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="130"/></proof>
  </goal>
  <goal name="g.1" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="130"/></proof>
  </goal>
  <goal name="g.2" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="130"/></proof>
  </goal>
  <goal name="g.3" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="130"/></proof>
  </goal>
  <goal name="g.4" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="130"/></proof>
  </goal>
  <goal name="g.5" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="132"/></proof>
  </goal>
  <goal name="g.6" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="132"/></proof>
  </goal>
  <goal name="g.7" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="132"/></proof>
  </goal>
  <goal name="g.8" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="132"/></proof>
  </goal>
  <goal name="g.9" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="134"/></proof>
  </goal>
  <goal name="g.10" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="134"/></proof>
  </goal>
  <goal name="g.11" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="134"/></proof>
  </goal>
  <goal name="g.12" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="144"/></proof>
  </goal>
  <goal name="g.13" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="145"/></proof>
  </goal>
  <goal name="g.14" proved="true">
  <proof prover="2"><result status="valid" time="0.11" steps="144"/></proof>
  </goal>
  <goal name="g.15" proved="true">
  <proof prover="2"><result status="valid" time="0.13" steps="144"/></proof>
  </goal>
  <goal name="g.16" proved="true">
  <proof prover="2"><result status="valid" time="0.08" steps="143"/></proof>
  </goal>
  <goal name="g.17" proved="true">
  <proof prover="2"><result status="valid" time="0.09" steps="143"/></proof>
  </goal>
  <goal name="g.18" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="140"/></proof>
  </goal>
  <goal name="g.19" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="140"/></proof>
  </goal>
  <goal name="g.20" proved="true">
  <proof prover="2"><result status="valid" time="0.06" steps="128"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="trans_deterministic_aux" proved="true">
 <transf name="inversion_pr" proved="true" >
  <goal name="trans_deterministic_aux.0" proved="true">
  <proof prover="2"><result status="valid" time="1.22" steps="2215"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.1" proved="true">
  <proof prover="2"><result status="valid" time="1.26" steps="2215"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.2" proved="true">
  <proof prover="2"><result status="valid" time="1.27" steps="2216"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.3" proved="true">
  <proof prover="2"><result status="valid" time="1.23" steps="2215"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.4" proved="true">
  <proof prover="2"><result status="valid" time="1.32" steps="2215"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.5" proved="true">
  <proof prover="2"><result status="valid" time="1.18" steps="2558"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.6" proved="true">
  <proof prover="2"><result status="valid" time="1.49" steps="2558"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.7" proved="true">
  <proof prover="2"><result status="valid" time="1.38" steps="2558"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.8" proved="true">
  <proof prover="2"><result status="valid" time="1.73" steps="2589"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.9" proved="true">
  <proof prover="2"><result status="valid" time="0.93" steps="2353"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.10" proved="true">
  <proof prover="2"><result status="valid" time="1.32" steps="2353"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.11" proved="true">
  <proof prover="2"><result status="valid" time="1.30" steps="2365"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.12" proved="true">
  <proof prover="2"><result status="valid" time="1.15" steps="1939"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.13" proved="true">
  <proof prover="2"><result status="valid" time="1.08" steps="2409"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.14" proved="true">
  <proof prover="2"><result status="valid" time="1.02" steps="1951"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.15" proved="true">
  <proof prover="2"><result status="valid" time="1.79" steps="1939"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.16" proved="true">
  <proof prover="2"><result status="valid" time="1.54" steps="2817"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.17" proved="true">
  <proof prover="2"><result status="valid" time="1.52" steps="2865"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.18" proved="true">
  <proof prover="2"><result status="valid" time="1.18" steps="2676"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.19" proved="true">
  <proof prover="2"><result status="valid" time="1.48" steps="2697"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.20" proved="true">
  <proof prover="2"><result status="valid" time="0.90" steps="2163"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="trans_deterministic" proved="true">
 <proof prover="2"><result status="valid" time="0.07" steps="101"/></proof>
 </goal>
 <goal name="trans_deterministic_star" proved="true">
 <proof prover="2"><result status="valid" time="0.06" steps="93"/></proof>
 </goal>
</theory>
</file>
</why3session>
